services:
  app:
    build:
      context: .
      dockerfile: docx_converter/Dockerfile
    volumes:
      - static_data:/app/staticfiles
      - media_data:/app/media
    env_file:
      - .env
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate && python manage.py collectstatic --no-input &&
             gunicorn --bind 0.0.0.0:8000 docx_converter.wsgi:application"

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    volumes:
      - static_data:/app/static
      - media_data:/app/media
    ports:
      - '80:80'
    depends_on:
      - app

volumes:
  static_data:
  media_data:
  postgres_data:
